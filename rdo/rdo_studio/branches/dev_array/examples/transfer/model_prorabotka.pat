$Pattern Образец_прихода_заявок: irregular_event
$Relevant_resources
	_счетчик: счетчик Keep
	_заявка : заявки  Create
$Time = 20//ф_приход_заявок (34, 38)
$Body
_счетчик
	Convert_event
		счет_заявок += 1;
_заявка
    Convert_event trace
		номер_заявки = _счетчик.счет_заявок;
		вес_груза    = ф_вес_груза (900.0, 1800.0);
		маршрут      = ф_тип_маршрута;
		время_прихода= Time_now;
$End

$Pattern Образец_расчета_количества_вагонов: rule
$Relevant_resources
	_заявка: заявки Keep
$Body
_заявка
	Choice from _заявка.состояние == пришла
	Convert_rule
		if (Int(_заявка.вес_груза/тоннаж) < _заявка.вес_груза/тоннаж)
			количество_вагонов_в_заявке = Int(_заявка.вес_груза/тоннаж) + 1;
		else
			количество_вагонов_в_заявке = Int(_заявка.вес_груза/тоннаж);
		состояние                   = распределение_вагонов;
		остаток_в_заявке            = количество_вагонов_в_заявке;
$End

$Pattern Образец_списания_вагонов: rule
$Relevant_resources
	_заявка            : заявки              Keep
	_формируемый_состав: формируемые_составы Keep
	first
$Body
_заявка
	Choice from _заявка.состояние == распределение_вагонов
	Convert_rule
		if (_заявка.остаток_в_заявке > _формируемый_состав.оставшееся_число_вагонов)
			буфер = _формируемый_состав.оставшееся_число_вагонов;
		else
			буфер = _заявка.остаток_в_заявке;
		остаток_в_заявке        -= буфер;
		состояние                = списание_закончено;
		номер_последнего_состава = _формируемый_состав.номер_формируемого_состава;
_формируемый_состав
	Choice from _формируемый_состав.состояние == распределение
			and _заявка.маршрут               == _формируемый_состав.маршрут
	Convert_rule
		оставшееся_число_вагонов -= _заявка.буфер;
		состояние                 = списание;
$End

$Pattern Образец_проверки_формируемого_состава: rule
$Relevant_resources
	_формируемый_состав: формируемые_составы Keep
$Body
_формируемый_состав
	Choice from _формируемый_состав.состояние == списание
	Convert_rule
		if (оставшееся_число_вагонов == 0)
			состояние = заполнен;
		else
			состояние = распределение;
$End

$Pattern Образец_проверки_аренды: operation trace
$Relevant_resources
	_парк: парк Keep Keep
$Time = 10
$Body
_парк
	Choice from _парк.количество_вагонов_в_парке < вагоны_в_составе	and	заказ_аренды == false
	Convert_begin
		заказ_аренды = true;
	Convert_end
		количество_вагонов_в_парке += вагоны_в_составе;
		заказ_аренды = false;
$End

$Pattern Образец_проверки_заявки: rule
$Relevant_resources
	_заявка: заявки              Keep
$Body
_заявка
	Choice from _заявка.состояние == списание_закончено
	Convert_rule
		if (остаток_в_заявке == 0)
			состояние = распределена;
		else
			состояние = распределение_вагонов;
$End

$Pattern Образец_готовности_состава: rule
$Relevant_resources
	_формируемый_состав: формируемые_составы Keep
	_парк              : парк                Keep
	_состав            : составы             Create
	first
$Body
_формируемый_состав
	Choice from _формируемый_состав.состояние == заполнен
	Convert_rule
		состояние = следующий;
_парк
	Choice from _парк.количество_вагонов_в_парке >= вагоны_в_составе
	Convert_rule
		количество_вагонов_в_парке -= вагоны_в_составе;
_состав
	Convert_rule trace
		маршрут          = _формируемый_состав.маршрут;
		номер_состава    = _формируемый_состав.номер_формируемого_состава;
$End

$Pattern Образец_назначения_нового_номера_состава: rule
$Relevant_resources
	_формируемый_состав: формируемые_составы Keep
$Body
_формируемый_состав
	Choice from _формируемый_состав.состояние == следующий
	Convert_rule
		номер_формируемого_состава += 1;
		оставшееся_число_вагонов    = 60;
		состояние                   = распределение;
$End

$Pattern Образец_создания_состава: operation
$Relevant_resources
	_состав             : составы           Keep Keep
	_станция_отправления: пункт_отправления Keep Keep
	first
$Time = ф_создания_состава (35.0, 45.0)
$Body
_состав
	Choice from _состав.состояние == сформирован
	Convert_begin
		состояние = создается;
	Convert_end
		состояние = готов_к_погрузке;
_станция_отправления
	Choice from _станция_отправления.состояние == свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
		количество_обслуженных_составов +=1;
$End

$Pattern Образец_погрузки: operation
$Relevant_resources
	_состав        : составы        Keep Keep
	_пункт_погрузки: пункт_погрузки Keep Keep
	first
$Time = ф_погрузки (18.0, 22.0)
$Body
_состав
	Choice from _состав.состояние == готов_к_погрузке
	Convert_begin
		состояние = погрузка;
	Convert_end
		состояние = готов_к_отправке;
_пункт_погрузки
	Choice from _пункт_погрузки.состояние == свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
		количество_обслуженных_составов +=1;
$End

$Pattern Образец_следования_по_маршруту: operation
$Parameters
	номер_маршрута_: such_as заявки.маршрут
	начало_пути_   : such_as пункты_отправления.местоположение
	конец_пути_    : such_as пункты_отправления.местоположение
	расстояние_    : real
	направление_   : such_as составы.направление
	состояние_     : such_as составы.состояние
$Relevant_resources
	_cостав: составы Keep Keep
$Time = ф_время_в_пути(расстояние_)
$Body
_cостав
	Choice from _cостав.состояние      == готов_к_отправке
			and _cостав.маршрут        == номер_маршрута_
			and _cостав.местоположение == начало_пути_
			and _cостав.направление    == направление_
	Convert_begin
		состояние      = в_пути;
	Convert_end
		состояние      = состояние_;
		местоположение = конец_пути_;
$End

//новый образец
$Pattern новый_Образец_следования_по_маршруту: operation
$Relevant_resources
	_cостав: составы Keep Keep
$Time = ф_время_в_пути(1244)
$Body
_cостав
	Choice from _cостав.состояние      == готов_к_отправке
	Convert_begin
	Convert_end
$End

$Pattern Образец_прохождения_таможни: operation
$Relevant_resources
	_состав : составы 	 	    Keep Keep
	_таможня: таможенные_пункты Keep Keep
	first
$Time = ф_прохождение_таможни (9.0, 11.0)
$Body
_состав
	Choice from _состав.состояние == прибыл_на_таможню
	Convert_begin
		состояние = прохождение_таможни;
	Convert_end
		состояние = прошел_таможню;
_таможня
	Choice from _таможня.состояние      == свободен
			and _таможня.местоположение == _состав.местоположение
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
		количество_обслуженных_составов +=1;
$End

//Образец нужен для перевода состава в Бресте в состояние "необходимо_сменить_колею"
$Pattern Образец_выбора_действий_после_таможни: rule
$Relevant_resources
	_пункт_смены_колеи: пункт_смены_колеи NoChange
	_состав			  : составы           Keep
$Body
_пункт_смены_колеи
_состав
	Choice from _состав.состояние == прошел_таможню
	Convert_rule
	if (_состав.местоположение == _пункт_смены_колеи.местоположение)
		состояние = необходимо_сменить_колею;
	else
		состояние = готов_к_отправке;
$End

$Pattern Образец_смены_колеи: operation
$Relevant_resources
	_состав            : составы          Keep Keep
	_пункт_смены_колеи: пункт_смены_колеи Keep Keep
$Time = ф_смена_колеи (35.0, 45.0)
$Body
_состав
	Choice from _состав.состояние == необходимо_сменить_колею
	Convert_begin
		состояние = смена_колеи;
	Convert_end
		состояние = готов_к_отправке;
_пункт_смены_колеи
	Choice from состояние == свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
		количество_обслуженных_составов +=1;
$End

$Pattern Образец_разгрузки: operation
$Relevant_resources
	_состав          : составы 		     Keep Keep
	_пункт_назначения: пункты_назначения Keep Keep
	first
$Time = ф_разгрузка (25.0, 40.0)
$Body
_состав
	Choice from _состав.состояние == прибыл_на_разгрузку
	Convert_begin
		состояние = разгрузка;
	Convert_end
		состояние = разгружен;
_пункт_назначения
	Choice from _пункт_назначения.местоположение == _состав.местоположение
			and _пункт_назначения.состояние      == свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
		количество_обслуженных_составов +=1;
$End

$Pattern Образец_списывания_обслуженных_заявок: rule
$Relevant_resources
	_состав  : составы Keep
	_заявка  : заявки  Keep
	_счетчик: счетчик  Keep
	first
$Body
_состав
	Choice from _состав.состояние == разгружен
	Convert_rule
_заявка
	Choice from _заявка.номер_последнего_состава == _состав.номер_состава
			and _заявка.маршрут                  == _состав.маршрут
			and _заявка.состояние                == распределена
	Convert_rule
		состояние = обслужена;
_счетчик
	Convert_rule
		количество_обслуженных_заявок +=1;
		время                          = Time_now;
		время_обслуживания            += время - _заявка.время_прихода;
		среднее_время_обслуживания     = время_обслуживания/количество_обслуженных_заявок;
$End

$Pattern Образец_отправки_состава_на_мойку: rule
$Relevant_resources
	_состав: составы Keep
$Body
_состав
	Choice from _состав.состояние == разгружен
	Convert_rule
		состояние = необходима_мойка;
$End

$Pattern Образец_мойки: operation
$Relevant_resources
	_состав     : составы      Keep Keep
	_пункт_мойки: пункты_мойки Keep Keep
$Time = ф_мойка (29.0, 35.0)
$Body
_состав
	Choice from _состав.состояние == необходима_мойка
	Convert_begin
		состояние = мойка;
	Convert_end
		состояние = готов_к_возврату;
_пункт_мойки
	Choice from _пункт_мойки.состояние == свободен and _пункт_мойки.местоположение == _состав.местоположение
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
		количество_обслуженных_составов +=1;
$End

$Pattern Образец_подготовки_состава_к_возврату: rule
$Relevant_resources
	_состав: составы Keep
$Body
_состав
	Choice from _состав.состояние == готов_к_возврату
	Convert_rule
		направление = обратное;
		состояние   = готов_к_отправке;
$End

$Pattern Образец_возврата_вагонов_в_парк: operation
$Relevant_resources
	_состав: составы Keep     Keep
	_парк  : парк    NoChange Keep
$Time = ф_возврата_вагонов_в_парк(35.0, 50.0)
$Body
_состав
	Choice from _состав.состояние == прибыл_в_парк
	Convert_begin
		состояние = расформирование;
	Convert_end
		состояние = расформирован;
_парк
	Convert_end
		количество_вагонов_в_парке += вагоны_в_составе;
$End

$Pattern Образец_удаления_состава: rule
$Relevant_resources
	_состав : составы Erase
	_счетчик: счетчик Keep
first
$Body
_состав
	Choice from _состав.состояние == расформирован
_счетчик
	Convert_rule
		количество_удаленных_составов += 1;
$End

$Pattern Образец_удаления_заявки: operation
$Relevant_resources
	_заявка : заявки  Keep Erase
	_счетчик: счетчик Keep NoChange
first
$Time = 0
$Body
_заявка
	Choice from _заявка.состояние == обслужена
	Convert_begin
		состояние = delete;
		время_обслуживания = time_now - время_прихода;
_счетчик
	Convert_begin
		количество_удаленных_заявок += 1;
$End
