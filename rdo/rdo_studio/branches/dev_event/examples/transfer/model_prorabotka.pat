$Pattern Образец_прихода_заявок : irregular_event
$Relevant_resources
	_счетчик: счетчик Keep 
	заявка  : заявки  Create 
$Time = ф_приход_заявок (6*1, 5) 
$Body
_счетчик 
	Convert_event 
		количество_заявок_в_очереди += 1;
		счет_заявок += 1;
заявка
    Convert_event trace
		номер_заявки = _счетчик.счет_заявок + 1; //т.к. в момент создания заявки счет_заявок = 0 по умолчанию. вроде.
		вес_груза = ф_вес_груза (30.0, 1800.0);
		маршрут   = ф_тип_маршрута;
		состояние = пришла;
$End

$Pattern Образец_расчета_количества_вагонов : rule 
$Relevant_resources
	заявка: заявки Keep
$Body
заявка
	Choice from заявка.состояние = пришла
	Convert_rule
		количество_вагонов_в_заявке = ф_приведение_к_ближайшему_неменьшему_целому ( заявка.вес_груза / тоннаж ); 
		состояние = рассчитана;
$End

$Pattern Образец_подготовки_формируемого_состава_к_обработке_текущей_заявки : rule
$Relevant_resources
	заявка             : заявки              Keep  
	формируемый_состав : формируемые_составы Keep 
$Body
заявка 
	Choice from заявка.состояние = рассчитана or заявка.состояние = остались_нераспределенные_вагоны
	Convert_rule 
	if  (заявка.состояние = рассчитана)
	{
		остаток_в_заявке = количество_вагонов_в_заявке;
		состояние = привязать_к_формируемому_составу;
	}
	if (заявка.состояние = остались_нераспределенные_вагоны)
	{
		состояние = привязать_к_формируемому_составу;
	}
формируемый_состав
	Choice from формируемый_состав.маршрут = заявка.маршрут and формируемый_состав.состояние != создан  
			and формируемый_состав.состояние != распределение_вагонов
			and формируемый_состав.состояние != привязать_к_следующей_заявке
	Convert_rule
	if (формируемый_состав.состояние = пустой)
	{
		номер_формируемого_состава += 1;
		состояние = привязать_к_следующей_заявке;
		номер_распределяемой_заявки = заявка.номер_заявки;
	}
	if (формируемый_состав.состояние = полупустой) 
	{  
		номер_распределяемой_заявки = заявка.номер_заявки;
		состояние = привязать_к_следующей_заявке;
	}
$End

$Pattern Образец_привязки_состава_к_обрабатываемой_заявке : rule
$Relevant_resources
	формируемый_состав : формируемые_составы Keep  
	заявка             : заявки              Keep  
$Body
формируемый_состав
	Choice from формируемый_состав.состояние = привязать_к_следующей_заявке
	Convert_rule
	состояние = распределение_вагонов;
заявка	
	Choice from заявка.номер_заявки = формируемый_состав.номер_распределяемой_заявки 
			and заявка.состояние = привязать_к_формируемому_составу
	Convert_rule
		номер_формируемого_состава1 = формируемый_состав.номер_распределяемой_заявки;
		состояние = распределение_вагонов;
$End

$Pattern Образец_распределения_заявки_заявка: rule  
$Relevant_resources
	формируемый_состав: формируемые_составы NoChange
	заявка            : заявки              Keep 
$Body
формируемый_состав
	Choice from формируемый_состав.состояние = распределение_вагонов
заявка    
	Choice from заявка.состояние = распределение_вагонов and заявка.маршрут = формируемый_состав.маршрут
			and заявка.номер_формируемого_состава1 = формируемый_состав.номер_распределяемой_заявки
	Convert_rule
		if (60 - формируемый_состав.текущее_количество_вагонов < заявка.остаток_в_заявке) 
		{
			остаток_в_заявке -= (60 - формируемый_состав.текущее_количество_вагонов);
			состояние = остались_нераспределенные_вагоны;
		}
		else 
		{
			остаток_в_заявке = 0; //для стройности рассуждений :) можно и убрать :)
			состояние = распределена;
		}
$End 

$Pattern Образец_распределения_заявки_формируемый_состав: rule  
$Relevant_resources
	заявка            : заявки              NoChange  
	формируемый_состав: формируемые_составы Keep 
$Body
заявка 
	Choice from заявка.состояние = распределение_вагонов
формируемый_состав    
	Choice from формируемый_состав.маршрут = заявка.маршрут and формируемый_состав.состояние = распределение_вагонов
			and формируемый_состав.номер_распределяемой_заявки = заявка.номер_формируемого_состава1 
	Convert_rule
		if (60 - формируемый_состав.текущее_количество_вагонов <= заявка.остаток_в_заявке) 
		{
			текущее_количество_вагонов = 60;
			состояние = создан;
		}
		else 
		{
			текущее_количество_вагонов += заявка.количество_вагонов_в_заявке;
			состояние = полупустой;
		}
$End 

$Pattern Образец_готовности_состава: rule 
$Relevant_resources
    формируемый_состав: формируемые_составы Keep 
	состав            : составы            Create 
	_парк             : парк               Keep 
$Body
формируемый_состав
	Choice from формируемый_состав.состояние = создан
	Convert_rule
		текущее_количество_вагонов = 0;
		состояние = пустой;
состав
	Convert_rule trace
		состояние = сформирован;
		маршрут = формируемый_состав.маршрут;
		номер_состава = формируемый_состав.номер_формируемого_состава;                             
		направление = прямое;
_парк
	Convert_rule 
	if (количество_вагонов_в_парке >= 60)
		количество_вагонов_в_парке -= 60; 
	else 
	{ 
		количество_вагонов_в_парке = 0;
		дефицит = 60 - _парк.количество_вагонов_в_парке;
	}
$End

$Pattern Образец_создания_состава : operation 
$Relevant_resources
	состав              : составы  			  Keep Keep
	_станция_отправления: пункт_отправления  Keep Keep
$Time = ф_создания_состава (60, 10)
$Body
состав
	Choice from состав.состояние = сформирован
	Convert_begin
		состояние = создается; //так же для стройности рассуждений :)
	Convert_end
		состояние = готов_к_погрузке;
_станция_отправления
	Choice from _станция_отправления.состояние = свободен 
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_погрузки : operation 
$Relevant_resources
	состав         : составы        Keep Keep
	_пункт_погрузки: пункт_погрузки Keep Keep
$Time = ф_погрузки (60*20, 5)
$Body
состав
	Choice from состав.состояние = готов_к_погрузке
	Convert_begin
		состояние = погрузка;
	Convert_end
		состояние = готов_к_отправке;
_пункт_погрузки
	Choice from _пункт_погрузки.состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_следования_по_маршруту : operation
$Parameters 
	номер_маршрута: such_as заявки.маршрут
	начало_пути   : such_as контрольные_пункты.расположение
	конец_пути    : such_as контрольные_пункты.расположение
	расстояние    : real 
	направление   : such_as составы.направление
$Relevant_resources
	cостав : составы Keep Keep
$Time = ф_время_в_пути (расстояние*24*60/500, 120)
$Body
cостав
	Choice from cостав.состояние = готов_к_отправке and cостав.маршрут = номер_маршрута 
		and cостав.местоположение = начало_пути and cостав.направление = направление
	Convert_begin
		состояние = в_пути;
	Convert_end
		состояние = прибыл;
		местоположение = конец_пути;
$End

$Pattern Образец_определения_действий_с_составом : rule
$Relevant_resources
	станция_отправления: пункт_отправления NoChange 
	станция_назначения : пункты_назначения NoChange 
	состав             : составы Keep 
$Body
станция_отправления
станция_назначения
состав
	Choice from состав.состояние = прибыл
	Convert_rule
	if (состав.местоположение = станция_назначения.расположение) 
	{
		состояние = прибыл_на_разгрузку;
	}
	if (состав.местоположение = станция_отправления.расположение)
	{
		состояние = прибыл_в_парк;
	}
	else 
	{	
		состояние = прибыл_на_таможню; 
	}
$End

$Pattern Образец_прохождения_таможни : operation
$Relevant_resources
	таможня			  : таможенные_пункты  Keep     Keep
	_пункт_смены_колеи: пункт_смены_колеи NoChange NoChange
	состав  		  : составы 	 	   Keep     Keep
$Time = ф_прохождение_таможни (60*4, 60)
$Body
таможня
	Choice from таможня.состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
_пункт_смены_колеи
состав
	Choice from состав.состояние = прибыл_на_таможню 
			and состав.местоположение = таможня.расположение
	Convert_begin
		состояние = прохождение_таможни;
	Convert_end
	if (состав.местоположение = _пункт_смены_колеи.расположение)
	{
		состояние = необходимо_сменить_колею;
	}
	else 
	{
		состояние = готов_к_отправке;
	}
$End

$Pattern Образец_смены_колеи : operation
$Relevant_resources
	состав            : составы           Keep Keep
	_пункт_смены_колеи: пункт_смены_колеи Keep Keep
$Time = ф_смена_колеи (60*3, 30)
$Body
состав
	Choice from состав.состояние = необходимо_сменить_колею
	Convert_begin
		состояние = смена_колеи;
	Convert_end
		состояние = готов_к_отправке;
_пункт_смены_колеи
	Choice from состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_разгрузки : operation
$Relevant_resources
	состав          : составы 		    Keep 	 Keep
	пункт_назначения: пункты_назначения Keep 	 Keep
	заявка          : заявки            NoChange Keep 
	_счетчик        : счетчик           NoChange Keep
$Time = ф_разгрузка (60*4, 60)
$Body
состав
	Choice from состав.состояние = прибыл_на_разгрузку
	Convert_begin
		состояние = разгрузка;
	Convert_end
		состояние = необходима_мойка;
пункт_назначения
	Choice from пункт_назначения.расположение = состав.местоположение and пункт_назначения.состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
заявка 
	Choice from заявка.номер_формируемого_состава1 = состав.номер_состава
	Convert_end
		состояние = обслужена;
_счетчик 
	Convert_end
		количество_обслуженных_заявок +=1;
$End

$Pattern Образец_мойки : operation
$Relevant_resources
	состав     : составы      Keep Keep
	пункт_мойки: пункты_мойки Keep Keep
$Time = ф_мойка (60*60, 60)  
$Body
состав
	Choice from состав.состояние = необходима_мойка
	Convert_begin
		состояние = мойка;
	Convert_end
		состояние = готов_к_возврату;
		направление = обратное;
пункт_мойки
	Choice from пункт_мойки.состояние = свободен and пункт_мойки.расположение = состав.местоположение
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_возврата_вагонов_в_парк : operation
$Relevant_resources
	состав: составы NoChange Erase
	парк  : парки   NoChange Keep
$Time = ф_возврата_вагонов_в_парк (60*2, 30)
$Body
состав
парк
	Choice from состав.состояние = прибыл_в_парк
	first
	Convert_end
		количество_вагонов_в_парке += 60; 
$End