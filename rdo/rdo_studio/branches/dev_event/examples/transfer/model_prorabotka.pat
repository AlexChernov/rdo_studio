$Pattern Образец_прихода_заявок : irregular_event
$Relevant_resources
	_счетчик: счетчик Keep 
	заявка  : заявки  Create 
$Time = ф_приход_заявок (200, 1) 
$Body
_счетчик 
	Convert_event 
		счет_заявок += 1;
заявка
    Convert_event trace
		номер_заявки = _счетчик.счет_заявок; 
		вес_груза = ф_вес_груза (900.0, 1800.0);
		маршрут   = ф_тип_маршрута;
		состояние = пришла;
$End

$Pattern Образец_расчета_количества_вагонов : rule 
$Relevant_resources
	заявка: заявки Keep
$Body
заявка
	Choice from заявка.состояние == пришла
	Convert_rule
		количество_вагонов_в_заявке = ф_приведение_к_ближайшему_большему_целому ( заявка.вес_груза / тоннаж ); 
		состояние = рассчитана;
$End

$Pattern Образец_подготовки_формируемого_состава_к_обработке_текущей_заявки : rule
$Relevant_resources
	заявка             : заявки              Keep  
	формируемый_состав : формируемые_составы Keep 
$Body
заявка 
	Choice from заявка.состояние == рассчитана or заявка.состояние == остались_нераспределенные_вагоны 
	Convert_rule
	if  (заявка.состояние == рассчитана) 
	{	
		остаток_в_заявке = количество_вагонов_в_заявке;
		состояние = распределение_вагонов;
		буфер = заявка.количество_вагонов_в_заявке;
	}
	else
	{	
		состояние = распределение_вагонов;
		буфер = заявка.остаток_в_заявке;
	}
формируемый_состав
	Choice from формируемый_состав.маршрут == заявка.маршрут and флаг_формируемого_состава == 0
			and (формируемый_состав.состояние == пустой or формируемый_состав.состояние == полупустой)  
	Convert_rule
	if (формируемый_состав.состояние == пустой)
	{	
		номер_формируемого_состава += 1;
		состояние = распределение_вагонов; 
	}
	else
		состояние = распределение_вагонов;
$End

$Pattern Служебный_образец: rule  
$Relevant_resources
	формируемый_состав: формируемые_составы Keep
	заявка            : заявки              Keep 
$Body
формируемый_состав
	Choice from формируемый_состав.состояние == распределение_вагонов
	Convert_rule
		состояние = служебное_состояние_1;
заявка    
	Choice from заявка.состояние == распределение_вагонов and заявка.маршрут == формируемый_состав.маршрут
	Convert_rule
		состояние = служебное_состояние_1;
$End 

$Pattern Образец_распределения_заявки_заявка: rule  
$Relevant_resources
	заявка            : заявки              Keep 
	формируемый_состав: формируемые_составы Keep 
$Body
заявка    
	Choice from заявка.состояние == служебное_состояние_1
	Convert_rule
		if (заявка.остаток_в_заявке > (60 - формируемый_состав.текущее_количество_вагонов)) 
		{
			остаток_в_заявке -= 60 - формируемый_состав.текущее_количество_вагонов;
		}
		else 
		{
			остаток_в_заявке = 0; 
			состояние = распределена;
			номер_последнего_состава = формируемый_состав.номер_формируемого_состава;
		}
		
формируемый_состав
	Choice from формируемый_состав.состояние == служебное_состояние_1
	Convert_rule
		if ((60 - формируемый_состав.текущее_количество_вагонов) <= заявка.буфер) 
		{	
			текущее_количество_вагонов = 60;
			состояние = сформирован;
		}
		if ((60 - формируемый_состав.текущее_количество_вагонов) > заявка.буфер)
			текущее_количество_вагонов = формируемый_состав.текущее_количество_вагонов + заявка.буфер;	
$End 

/*$Pattern Образец_распределения_заявки_формируемый_состав: rule  
$Relevant_resources
	заявка            : заявки              NoChange  
	формируемый_состав: формируемые_составы Keep 
$Body
заявка 
	Choice from заявка.состояние = служебное_состояние_1
формируемый_состав    
	Choice from формируемый_состав.состояние = служебное_состояние_1
	Convert_rule
		флаг_формируемого_состава = 1;
		if ((60 - формируемый_состав.текущее_количество_вагонов) <= заявка.буфер) 
		{	
			текущее_количество_вагонов = 60;
			состояние = сформирован;
		}
		else
			текущее_количество_вагонов = формируемый_состав.текущее_количество_вагонов + заявка.количество_вагонов_в_заявке;
$End */

$Pattern Образец_выбора_заявка : rule
$Relevant_resources
	заявка : заявки              Keep 
$Body
заявка 
	Choice from заявка.флаг_заявки = 1
	Convert_rule
	флаг_заявки = 0;
		if (заявка.остаток_в_заявке = 0)
			состояние = распределена;
		else
			состояние = остались_нераспределенные_вагоны;
$End

$Pattern Образец_выбора_формсостав : rule
$Relevant_resources
	формируемый_состав: формируемые_составы Keep 
$Body
формируемый_состав
	Choice from формируемый_состав.флаг_формируемого_состава = 1
	Convert_rule
	флаг_формируемого_состава = 0;
		if (формируемый_состав.текущее_количество_вагонов = вагоны_в_составе)
			состояние = сформирован;
		else
			состояние = полупустой;
			номер_распределяемой_заявки = 0;
$End

$Pattern Образец_готовности_состава: rule 
$Relevant_resources
    формируемый_состав: формируемые_составы Keep 
	состав            : составы             Create 
	_парк             : парк                Keep 
$Body
формируемый_состав
	Choice from формируемый_состав.состояние = сформирован
	Convert_rule 
		текущее_количество_вагонов = 0;
		состояние = пустой;
состав
	Convert_rule trace
		состояние = сформирован;
		маршрут = формируемый_состав.маршрут;
		номер_состава = формируемый_состав.номер_формируемого_состава;                             
		направление = прямое;
_парк
	Convert_rule 
	if (количество_вагонов_в_парке >= 60)
		количество_вагонов_в_парке -= 60; 
	else 
	{ 
		дефицит -= 60;
		количество_вагонов_в_парке = 0;
	}
$End










$Pattern Образец_создания_состава : operation 
$Relevant_resources
	состав              : составы  			  Keep Keep
	_станция_отправления: пункт_отправления  Keep Keep
$Time = 20//ф_создания_состава (6, 1)
$Body
состав
	Choice from состав.состояние = сформирован
	Convert_begin
		состояние = создается; //так же для стройности рассуждений :)
	Convert_end
		состояние = готов_к_погрузке;
_станция_отправления
	Choice from _станция_отправления.состояние = свободен 
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_погрузки : operation 
$Relevant_resources
	состав         : составы        Keep     Keep
	_пункт_погрузки: пункт_погрузки Keep     Keep
$Time = 20//ф_погрузки (6, 1)
$Body
состав
	Choice from состав.состояние = готов_к_погрузке
	Convert_begin
		состояние = погрузка;
	Convert_end
		состояние = готов_к_отправке;
_пункт_погрузки
	Choice from _пункт_погрузки.состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_следования_по_маршруту : operation
$Parameters 
	номер_маршрута: such_as заявки.маршрут
	начало_пути   : such_as пункты_отправления.местоположение 
	конец_пути    : such_as пункты_отправления.местоположение
	расстояние    : real 
	направление   : such_as составы.направление
$Relevant_resources
	cостав : составы Keep Keep
$Time = 20//ф_время_в_пути (расстояние*10/500, 0.1)
$Body
cостав
	Choice from cостав.состояние = готов_к_отправке and cостав.маршрут = номер_маршрута 
		and cостав.местоположение = начало_пути and cостав.направление = направление
	Convert_begin
		состояние = в_пути;
	Convert_end
		состояние = прибыл;
		местоположение = конец_пути;
$End

$Pattern Образец_определения_действий_с_составом : rule
$Relevant_resources
	таможня            : таможенные_пункты NoChange 
	станция_назначения : пункты_назначения NoChange
	станция_отправления: пункт_отправления NoChange 
	состав             : составы Keep 
$Body
таможня
станция_назначения
станция_отправления
состав
	Choice from состав.состояние = прибыл 
	Convert_rule
	if (состав.местоположение = таможня.местоположение) 
		состояние = прибыл_на_таможню;
	if (состав.местоположение = станция_назначения.местоположение)
		состояние = прибыл_на_разгрузку;
	if (состав.местоположение = станция_отправления.местоположение) 
		состояние = прибыл_в_парк; 
$End

$Pattern Образец_прохождения_таможни : operation
$Relevant_resources
	состав : составы 	 	   Keep Keep
	таможня: таможенные_пункты Keep Keep
$Time = 5//ф_прохождение_таможни (6, 1)
$Body
состав
	Choice from состав.состояние = прибыл_на_таможню 
	Convert_begin
		состояние = прохождение_таможни;
	Convert_end
		состояние = прошел_таможню;
таможня
	Choice from таможня.состояние = свободен and таможня.местоположение = состав.местоположение
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_выбора_действий_после_таможни : rule
$Relevant_resources
	_пункт_смены_колеи: пункт_смены_колеи NoChange 
	состав			  : составы Keep
$Body
_пункт_смены_колеи 
состав
	Choice from состав.состояние = прошел_таможню
	Convert_rule
	if (состав.местоположение = _пункт_смены_колеи.местоположение)
		состояние = необходимо_сменить_колею;
	else 
		состояние = готов_к_отправке;
$End

$Pattern Образец_смены_колеи : operation
$Relevant_resources
	состав            : составы           Keep Keep
	_пункт_смены_колеи: пункт_смены_колеи Keep Keep
$Time = 20//ф_смена_колеи (6, 1)
$Body
состав
	Choice from состав.состояние = необходимо_сменить_колею
	Convert_begin
		состояние = смена_колеи;
	Convert_end
		состояние = готов_к_отправке;
_пункт_смены_колеи
	Choice from состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_разгрузки : operation
$Relevant_resources
	состав          : составы 		    Keep 	 Keep
	пункт_назначения: пункты_назначения Keep 	 Keep
	заявка          : заявки            NoChange Keep 
	_счетчик        : счетчик           NoChange Keep
$Time = 20//ф_разгрузка (6, 1)
$Body
состав
	Choice from состав.состояние = прибыл_на_разгрузку
	Convert_begin
		состояние = разгрузка;
	Convert_end
		состояние = необходима_мойка;
пункт_назначения
	Choice from пункт_назначения.местоположение = состав.местоположение and пункт_назначения.состояние = свободен
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
заявка 
	Choice from заявка.номер_последнего_состава = состав.номер_состава
	Convert_end
		состояние = обслужена;
_счетчик 
	Convert_end
		количество_обслуженных_заявок +=1;
$End

$Pattern Образец_мойки : operation
$Relevant_resources
	состав     : составы      Keep Keep
	пункт_мойки: пункты_мойки Keep Keep
$Time = 20//ф_мойка (6, 1)  
$Body
состав
	Choice from состав.состояние = необходима_мойка
	Convert_begin
		состояние = мойка;
	Convert_end
		состояние = готов_к_отправке;
		направление = обратное;
пункт_мойки
	Choice from пункт_мойки.состояние = свободен and пункт_мойки.местоположение = состав.местоположение
	Convert_begin
		состояние = занят;
	Convert_end
		состояние = свободен;
$End

$Pattern Образец_возврата_вагонов_в_парк : operation
$Relevant_resources
	состав: составы NoChange Erase
	парк  : парки   NoChange Keep
$Time = 20//ф_возврата_вагонов_в_парк (6, 1)
$Body
состав
парк
	Choice from состав.состояние = прибыл_в_парк
	Convert_end
		количество_вагонов_в_парке += 60; 
$End

$Pattern Образец_удаления_заявки : rule
$Relevant_resources
	заявка: заявки Erase
$Body
заявка
	Choice from заявка.состояние = обслужена
$End
