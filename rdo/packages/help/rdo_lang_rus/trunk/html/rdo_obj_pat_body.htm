<HTML>
<HEAD>
<TITLE>Тело образца</TITLE>
<LINK rel = "stylesheet" type = "text/css" href = "../styles.css">
</HEAD>
<BODY>
	<DIV>
		<H1>ТЕЛО СОБЫТИЙ И ОБРАЗЦОВ АКТИВНОСТЕЙ</H1>
		<DL class="syntax">
			<DT class="syntax"><A name="body"></A><I>тело</I></DT>
			<DD class="syntax">Тело событий и образцов имеет следующий формат:
				<PRE class="syntax"><A class="syntax" href="#body_rel_res_name">&lt;имя_релевантного_ресурса&gt;</A> <A class="syntax" href="#body_use_rule">&lt;правило_использования&gt;</A>
{ &lt;имя_релевантного_ресурса&gt; &lt;правило_использования&gt; }</PRE>
				<DL class="syntax">
					<DT class="syntax"><A name="body_rel_res_name"></A><I>имя_релевантного_ресурса</I></DT>
					<DD class="syntax">Имена релевантных ресурсов должны следовать в том порядке, в котором они указаны в описании <A href="#rel_res_desc">релевантных ресурсов</A>.</DD>
					<DT class="syntax"><A name="body_use_rule"></A><I>правило_использования</I></DT>
					<DD class="syntax">Правило использования должно быть указано для каждого ресурса и имеет следующие форматы:
						<P>для образца типа <FONT class="syntax">operation</FONT> и <FONT class="syntax">keyboard</FONT>:</P>
						<PRE class="syntax"><A class="syntax" href="#init_cond">&lt;предусловие&gt;</A> [ Convert_begin <A class="syntax" href="#statement_list">&lt;список_инструкций&gt;</A> ] [ Convert_end <A class="syntax" href="#statement_list">&lt;список_инструкций&gt;</A> ]</PRE>
						<P>для образца типа <FONT class="syntax">rule</FONT>:</P>
						<PRE class="syntax"><A class="syntax" href="#init_cond">&lt;предусловие&gt;</A> [ Convert_rule <A class="syntax" href="#statement_list">&lt;список_инструкций&gt;</A> ]</PRE>
						<P>для <FONT class="syntax">событий</FONT>:</P>
						<PRE class="syntax">Convert_event <A class="syntax" href="#statement_list">&lt;список_инструкций&gt;</A></PRE>
						<DL class="syntax">
							<DT class="syntax"><A name="init_cond"></A><A name="init_cond_nchk"></A><I>предусловие</I></DT>
							<DD class="syntax">Предусловие записывают в следующем формате:
								<PRE class="syntax">Choice from <A class="syntax" href="#cond_log_expr">&lt;логическое_выражение&gt;</A> [ <A class="syntax" href="#cond_choice_type">&lt;способ_выбора&gt;</A> ]
или
Choice NoCheck [ &lt;способ_выбора&gt; ]</PRE>
								<DL class="syntax">
									<DT class="syntax"><A name="cond_log_expr"></A><I>логическое_выражение</I></DT>
									<DD class="syntax"><A href="../html/rdo_base_equations.htm">Логическое выражение</A> определяет предусловие использования ресурса (возможность выполнения операции или правила). Если нет необходимости в предусловии, то это указывают зарезервированным словом <FONT class="syntax">NoCheck</FONT> или вообще отсутствием <FONT class="syntax">Choice from</FONT>.</DD>
									<DT class="syntax"><A name="cond_choice_type"></A><I>способ_выбора</I></DT>
									<DD class="syntax">Способ выбора задается также, как и <A href="#pat_choice_type">после описания релевантных ресурсов образца</A>. Если он не указан после описания релевантных ресурсов образца, он может быть указан в теле образца для каждого релевантного ресурса после <A href="../html/rdo_base_equations.htm">логического выражения</A>. Способ выбора может быть задан также в случае, когда описатель релевантного ресурса есть имя конкретного ресурса и не существует альтернативы выбора. При этом можно использовать любой способ выбора: все равно он не будет учитываться, и результат будет одинаковым. Если состояние этого ресурса удовлетворяет предусловию, то ресурс может быть использован независимо от способа выбора, если же не удовлетворяет, то также независимо от способа выбора ресурс не может быть использован. Если способ выбора не указан, то по-умолчанию используется <FONT class="syntax">first</FONT>.
										<P>Если способ выбора указан после описания релевантных ресурсов образца, в теле образца он должен отсутствовать для всех релевантных ресурсов.</P>
									</DD>
								</DL>
							</DD>
							<DT class="syntax"><A name="statement_list"></A><I>список_инструкций</I></DT>
							<DD class="syntax">Список инструкций и указанное перед ним зарезервированное слово должны присутствовать в образце в том случае, если соответствующий <A href="#rel_res_desc">статус конвертора</A>, указанный при описании релевантных ресурсов, есть <FONT class="syntax">Keep</FONT> или <FONT class="syntax">Create</FONT>. Если статус конвертора есть <FONT class="syntax">Erase</FONT>, то список инструкций может быть пустым или наоборот содержать инструкции, которые требуется выполнить для сбора статистики в момент удаления ресурса. <A name="temp_trace_feat"></A>Если статус конвертора есть <FONT class="syntax">Create</FONT>, то после зарезервированного слова может быть указан <A href="../html/rdo_res_trace_descr.htm">признак трассировки</A> 
							для создаваемого ресурса.
							<P>Список инструкций записывают в следующем формате:</P>
								<PRE class="syntax"><A class="syntax" href="#statement">&lt;инструкция&gt;</A> { &lt;инструкция&gt; }</PRE>
								<DL class="syntax">
									<DT class="syntax"><A name="statement"></A><A name="statement_nc"></A><I>инструкция</I></DT>
									<DD class="syntax">Инструкция имеет формат:
										<PRE class="syntax"><A class="syntax" href="#statement_assignment">&lt;инструкция_присваивания&gt;</A>
| <A class="syntax" href="#statement_planning">&lt;инструкция_планирования_события&gt;</A>
| <A class="syntax" href="#statement_stop">&lt;инструкция_остановки_события&gt;</A>
| <A class="syntax" href="#statement_process_start">&lt;инструкция_инициации_процесса&gt;</A>
| <A class="syntax" href="#statement_nochange">&lt;пустая_инструкция&gt;</A>
| <A class="syntax" href="#statement_if">&lt;условная_инструкция&gt;</A>
| { <A class="syntax" href="#statement_list">&lt;список_инструкций&gt;</A> }</PRE>
										<DL class="syntax">
											<DT class="syntax"><A name="statement_assignment"></A><I>инструкция_присваивания</I></DT>
											<DD class="syntax">Инструкция присваивания имеет формат:
												<PRE class="syntax">&lt;имя_параметра&gt; <A class="syntax" href="#assignment_operator">&lt;оператор_присваивания&gt;</A> <A class="syntax" href="#arith_expr">&lt;арифметическое_выражение&gt;</A>;</PRE>
												<DL class="syntax">
													<DT class="syntax"><A name="assignment_operator"></A><I>оператор_присваивания</I></DT>
													<DD class="syntax">В данной версии языка возможны следующих операторы присваивания:
														<TABLE class="visible" cols="2" style="width: 80%">
															<TR valign="top">
																<TH align="left" width="20%">Оператор присваивания</TH>
																<TH align="left" width="80%">Описание</TH>
															</TR>
															<TR valign="top">
																<TD class="visible" NOWRAP width="20%"><FONT class="syntax">=</FONT></TD>
																<TD class="visible" width="80%">Присваивает параметру слева значение арифметического выражения справа</TD>
															</TR>
															<TR valign="top">
																<TD class="visible" NOWRAP width="20%"><FONT class="syntax">+=</FONT></TD>
																<TD class="visible" width="80%">Увеличивает параметр слева на значение арифметического выражения справа</TD>
															</TR>
															<TR valign="top">
																<TD class="visible" NOWRAP width="20%"><FONT class="syntax">-=</FONT></TD>
																<TD class="visible" width="80%">Уменьшает параметр слева на значение арифметического выражения справа</TD>
															</TR>
															<TR valign="top">
																<TD class="visible" NOWRAP width="20%"><FONT class="syntax">*=</FONT></TD>
																<TD class="visible" width="80%">Умножает параметр слева на значение арифметического выражения справа</TD>
															</TR>
															<TR valign="top">
																<TD class="visible" NOWRAP width="20%"><FONT class="syntax">/=</FONT></TD>
																<TD class="visible" width="80%">Делит параметр слева на значение арифметического выражения справа</TD>
															</TR>
														</TABLE>
													</DD>
													<DT class="syntax"><A name="arith_expr"></A><I>арифметическое_выражение</I></DT>
													<DD class="syntax"><A href="../html/rdo_base_equations.htm">Арифметическое выражение</A> должно иметь тот же тип, что и параметр, которому присваивается значение. Для вещественного параметра выражение может иметь целый тип.</DD>
												</DL>
											</DD>
											<DT class="syntax"><A name="statement_planning"></A><I>инструкция_планирования_события</I></DT>
											<DD class="syntax">Инструкция планирования события имеет формат:
												<PRE class="syntax"><A class="syntax" href="#planning_event_name">&lt;имя_события&gt;</A>.planning( <A class="syntax" href="#event_time">&lt;время_планирования_события&gt;</A> [, <A class="syntax" href="#param_descr">&lt;знчение_параметров_события&gt;</A> ] );</PRE>
												<DL class="syntax">
													<DT class="syntax"><A name="planning_event_name"></A><I>имя_события</I></DT>
													<DD class="syntax">Имя события - это имя одного из описанных в модели <A class="syntax" href="../html/rdo_obj_event.htm">событий</A>.</DD>
													<DT class="syntax"><A name="event_time"></A><I>время_планирования_события</I></DT>
													<DD class="syntax">Время планирования события представляет собой <A href="../html/rdo_base_equations.htm">арифметическое выражение</A>, равное времени, в которое данное событие выполнится.</DD>
													<DT class="syntax"><A name="param_descr"><I>значение параметров события</I></A></DT>
													<DD class="syntax">Значения параметров события записываются таким же образом, как и для <A href="../html/rdo_obj_dpt.htm#dpt_act_params">активностей</A>, за исключением того, что они могут представлять собой <A href="../html/rdo_base_equations.htm">арифметическое выражение</A>.</DD>
												</DL>
											</DD>
											<DT class="syntax"><A name="statement_stop"></A><I>инструкция_остановки_события</I></DT>
											<DD class="syntax">Инструкция остановки события имеет формат:
												<PRE class="syntax"><A class="syntax" href="#stop_event_name">&lt;имя_события&gt;</A>.stop();</PRE>
												<DL class="syntax">
													<DT class="syntax"><A name="stop_event_name"></A><I>имя_события</I></DT>
													<DD class="syntax">Имя события - это имя одного из описанных в модели <A class="syntax" href="../html/rdo_obj_event.htm">событий</A>.</DD>
												</DL>
											</DD>
											<DT class="syntax"><A name="statement_process_start"></A><I>инструкция_инициации_процесса</I></DT>
											<DD class="syntax">Инструкция инициации процесса активизирует процесс обслуживания, передавая транзакт в его первый блок, имеет следующий формат:
												<PRE class="syntax"><A class="syntax" href="#proc_name">&lt;имя_процесса&gt;</A>.processStart( <A class="syntax" href="#transact">&lt;транзакт&gt;</A> );</PRE>
												<DL class="syntax">
													<DT class="syntax"><A name="proc_name"></A><I>имя_процесса</I></DT>
													<DD class="syntax">Имя события - это имя одного из описанных в модели <A class="syntax" href="../html/rdo_obj_proc.htm">процессов</A>.</DD>
													<DT class="syntax"><A name="transact"></A><I>транзакт</I></DT>
													<DD class="syntax">Транзакт - это имя <A class="syntax" href="../html/rdo_obj_pat.htm#rel_res_desc">релевантного ресурса</A>, который передается в процесс в качестве транзакта.</DD>
												</DL>
											</DD>
											<DT class="syntax"><A name="statement_nochange"></A><I>пустая_инструкция</I></DT>
											<DD class="syntax">Пустая инструкция имеет формат:
												<PRE class="syntax">&lt;имя_параметра&gt; NoChange;</PRE>Зарезервированное слово <FONT class="syntax">NoChange</FONT> указывает, что значение данного параметра не изменяется.
											</DD>
											<DT class="syntax"><A name="statement_if"></A><I>условная_инструкция</I></DT>
											<DD class="syntax">Условная инструкция иммет формат:
												<PRE class="syntax">if ( <A class="syntax" href="#cond_log_expr">&lt;логическое_выражение&gt;</A> ) <A class="syntax" href="#statement">&lt;инструкция&gt;</A> [ else <A class="syntax" href="#statement">&lt;инструкция&gt;</A> ]</PRE>Ветвь <FONT class="syntax">else</FONT> является необязательной. Никаких ограничений на уровень вложенности инструкций в языке нет. Таким образом, внутри условной инструкции также могут быть условные инструкции и т.д.
											</DD>
										</DL>
										<P><A name="set_order">Все инструкции могут быть указаны в произвольном порядке. Вычисление новых значений параметров релевантных ресурсов происходит в том порядке, в котором следуют их инструкции присваивания. Если нет ни одной инструкции присваивания, которая относится к данному параметру, то подразумевается, что значение этого параметра не изменяется. Для ресурсов, имеющих статус конвертора <FONT class="syntax">Create</FONT>, задание новых значений каждого параметра обязательны, за исключением случая, когда для параметра указано значение по-умолчанию в описании типа ресурса.</P>
									</DD>
								</DL>
							</DD>
						</DL>
					</DD>
				</DL>
			</DD>
		</DL>
	</DIV>
	<BR><SCRIPT src="../navbar.js"></SCRIPT>
</BODY>
</HTML>