IF(MSVC_IDE)
	SET(CONFIG_DIRECTORY_DEBUG   ${EXECUTABLE_OUTPUT_PATH}/Debug  )
	SET(CONFIG_DIRECTORY_RELEASE ${EXECUTABLE_OUTPUT_PATH}/Release)
ELSE()
	SET(CONFIG_DIRECTORY_DEBUG   ${EXECUTABLE_OUTPUT_PATH})
	SET(CONFIG_DIRECTORY_RELEASE ${EXECUTABLE_OUTPUT_PATH})
ENDIF()

SET(QT_PLUGINS            plugins)
SET(QT_PLUGINS_PLATFORMS  ${QT_PLUGINS}/platforms)
SET(QT_PLUGINS_SQLDRIVERS ${QT_PLUGINS}/sqldrivers)

SET(QT_LIBRARY_DIR             $ENV{QTDIR}/bin                     )
SET(QT_PLUGINS_PLATFORMS_DIR   $ENV{QTDIR}/${QT_PLUGINS_PLATFORMS} )
SET(QT_PLUGINS_SQLDRIVERS_DIR  $ENV{QTDIR}/${QT_PLUGINS_SQLDRIVERS})

FIND_FILE(DLL_ICUUC       icuuc51.dll        PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_ICUIN       icuin51.dll        PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_ICUDT       icudt51.dll        PATHS ${QT_LIBRARY_DIR})
#FIND_FILE(DLL_D3DCOMPILER D3DCompiler_43.dll PATHS ${QT_LIBRARY_DIR})
SET(DLL_D_AND_R
	${DLL_ICUUC}
	${DLL_ICUIN}
	${DLL_ICUDT}
#	${DLL_D3DCOMPILER}
)

FIND_FILE(DLL_GLES libEGL.dll    PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_EGL  libGLESv2.dll PATHS ${QT_LIBRARY_DIR})
SET(CONFIG_DLL_OPTIONAL
	${DLL_GLES}
	${DLL_EGL}
)

FIND_FILE(DLL_R_QT_CORE     Qt5Core.dll     PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_D_QT_CORE     Qt5Cored.dll    PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_R_QT_CUI      Qt5Gui.dll      PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_D_QT_CUI      Qt5Guid.dll     PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_R_QT_WIDGETS  Qt5Widgets.dll  PATHS ${QT_LIBRARY_DIR})
FIND_FILE(DLL_D_QT_WIDGETS  Qt5Widgetsd.dll PATHS ${QT_LIBRARY_DIR})

FIND_FILE(DLL_R_PLUGINS_QWINDOWS qwindows.dll  PATHS ${QT_PLUGINS_PLATFORMS_DIR})
FIND_FILE(DLL_D_PLUGINS_QWINDOWS qwindowsd.dll PATHS ${QT_PLUGINS_PLATFORMS_DIR})
FIND_FILE(DLL_R_PLUGINS_QMINIMAL qminimal.dll  PATHS ${QT_PLUGINS_PLATFORMS_DIR})
FIND_FILE(DLL_D_PLUGINS_QMINIMAL qminimald.dll PATHS ${QT_PLUGINS_PLATFORMS_DIR})

IF (MSVC90)
	FIND_FILE(DLL_R_MSVCP msvcp90.dll)
	FIND_FILE(DLL_D_MSVCP msvcp90d.dll)
	FIND_FILE(DLL_R_MSVCR msvcr90.dll)
	FIND_FILE(DLL_D_MSVCR msvcr90d.dll)
ELSE()
	FIND_FILE(DLL_R_MSVCP msvcp100.dll)
	FIND_FILE(DLL_D_MSVCP msvcp100d.dll)
	FIND_FILE(DLL_R_MSVCR msvcr100.dll)
	FIND_FILE(DLL_D_MSVCR msvcr100d.dll)
ENDIF()

SET(CONFIG_DLL_D
	${DLL_D_AND_R}
	${DLL_D_QT_CORE}
	${DLL_D_QT_CUI}
	${DLL_D_QT_WIDGETS}
	${DLL_D_MSVCR}
	${DLL_D_MSVCP}
)
SET(CONFIG_PLUGINS_PLATFORM_D
	${DLL_D_PLUGINS_QWINDOWS}
	${DLL_D_PLUGINS_QMINIMAL}
)
FILE(COPY ${CONFIG_DLL_D}              DESTINATION ${CONFIG_DIRECTORY_DEBUG})
FILE(COPY ${CONFIG_PLUGINS_PLATFORM_D} DESTINATION ${CONFIG_DIRECTORY_DEBUG}/${QT_PLUGINS_PLATFORMS})

SET(CONFIG_DLL_R
	${DLL_D_AND_R}
	${DLL_R_QT_CORE}
	${DLL_R_QT_CUI}
	${DLL_R_QT_WIDGETS}
	${DLL_R_MSVCR}
	${DLL_R_MSVCP}
)
SET(CONFIG_PLUGINS_PLATFORM_R
	${DLL_R_PLUGINS_QWINDOWS}
	${DLL_R_PLUGINS_QMINIMAL}
)
FILE(COPY ${CONFIG_DLL_R}              DESTINATION ${CONFIG_DIRECTORY_RELEASE})
FILE(COPY ${CONFIG_PLUGINS_PLATFORM_R} DESTINATION ${CONFIG_DIRECTORY_RELEASE}/${QT_PLUGINS_PLATFORMS})

FOREACH(DLL_FILE_NAME ${CONFIG_DLL_OPTIONAL})
	IF(DLL_FILE_NAME)
		FILE(COPY ${DLL_FILE_NAME} DESTINATION ${CONFIG_DIRECTORY_DEBUG})
		FILE(COPY ${DLL_FILE_NAME} DESTINATION ${CONFIG_DIRECTORY_RELEASE})
	ENDIF()
ENDFOREACH()

CONFIGURE_FILE(${CMAKE_MODULE_PATH}/win32.install.iss.cmake ${CONFIG_DIRECTORY_RELEASE}/win32.install.iss)
